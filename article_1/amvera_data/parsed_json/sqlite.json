{
    "text": "sqlite sqlite — это компактная встраиваемая реляционная база данных она не требует отдельного сервера для работы что делает её идеальным выбором для легковесных приложений для разработки тестирования и производства sqlite используют в тех случаях когда не требуется сложная обработка транзакций или большая параллельная нагрузка sqlite обеспечивает поддержку основных функций sql включая транзакции индексы триггеры и большинство стандартных типов данных файлы баз данных sqlite как правило имеют расширение db sqlite или sqlite3 использование в amvera для использования sqlite в amvera отдельное приложение контейнер не требуется достаточно в коде указать путь для хранения файлов этой бд в постоянное хранилище если библиотека для вашего языка требует ручного создания файла бд или необходимо инициализировать бд уже имеющимся файлом то его необходимо загрузить через интерфейс выбрав папку data вкладки репозиторий data folder img data folder png eval rst admonition важно class warning сохранять данные в папку постоянного хранилища указанного в конфигурации по умолчанию data папка data в корне репозитория и data это разные директории eval rst admonition внимание class attention файлы бд сохраненные в папке artifacts откуда запускается код могу быть затерты и потеряны при пересборке проекта чтобы проверить куда сохраняются данные папку data в разделе репозиторий если в папке отсутствует требуемый файл вероятно сохранение данных идет в папку artifacts её можно посмотреть так же корректный путь при условии дефолтной папки монтирования data выглядит следующим образом не забудьте про перед data data sqlite database db eval rst admonition подсказка class hint для удобства локального тестирования и проверки путей вы можете создать директорию data на локальном компьютере это позволит тестировать локально используя верные пути при отправке приложения в облако примеры подключения в приведенных примерах предполагается что папка постоянного хранилища примонтирована в дефолтную папку data python в python для работы с sqlite часто используется встроенная библиотека sqlite3 python import sqlite3 подключение к базе данных или создание если она не существует conn sqlite3 connect data example db создание объекта cursor для выполнения sql запросов cursor conn cursor выполнение запроса cursor execute create table stocks date text trans text symbol text qty real price real закрытие соединения conn close java в java для подключения к sqlite можно использовать jdbc драйвер например sqlite jdbc от xerial java import java sql connection import java sql drivermanager import java sql sqlexception public class main public static void main string args connection connection null try подключение к бд string url jdbc sqlite data database db connection drivermanager getconnection url system out println подключение к sqlite выполнено успешно здесь могут быть запросы и обработка данных catch sqlexception e system out println e getmessage finally try if connection null connection close catch sqlexception ex system out println ex getmessage javascript node js в node js с sqlite можно работать через пакет sqlite3 который нужно установить через npm javascript const sqlite3 require sqlite3 verbose подключение к бд let db new sqlite3 database data example db sqlite3 open readwrite sqlite3 open create err if err return console error err message console log подключение к sqlite базе данных выполнено успешно закрытие подключения db close err if err return console error err message console log соединение с базой данных закрыто видеопример eval rst youtube q5vjp1l8tl4 align center width 100",
    "metadata": {
        "file_name": "sqlite.md",
        "section_count": 13,
        "section_1": "SQLite",
        "section_2": "Использование в Amvera",
        "section_3": "Примеры подключения",
        "section_4": "Python",
        "section_5": "Подключение к базе данных (или создание, если она не существует)",
        "section_6": "Создание объекта cursor для выполнения SQL-запросов",
        "section_7": "Выполнение запроса",
        "section_8": "cursor.execute('''CREATE TABLE stocks",
        "section_9": "             (date text, trans text, symbol text, qty real, price real)''')",
        "section_10": "Закрытие соединения",
        "section_11": "Java",
        "section_12": "JavaScript (Node.js)",
        "section_13": "Видеопример"
    }
}