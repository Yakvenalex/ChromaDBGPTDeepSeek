{
    "text": "jvm gradle данная конфигурация подходит если проект собирается при помощи gradle и запускается на jvm в этом случае проект может быть написан на таких языках как java или kotlin написать yaml файл можно как самостоятельно используя инструкцию ниже так и воспользоваться нашим генератором yaml перейдя по ссылке https manifest amvera ru секция meta секция meta файла amvera yml будет выглядеть следующим образом yaml meta environment jvm toolchain name gradle version 11 из параметров которые можно здесь менять это meta toolchain version логически это версия jdk который нужно использовать для сборки технически значение version подставляется в имя образа docker который будет использован для фазы сборки это gradle jdk meta toolchain version допустимые значения можно увидеть на странице докер хаба https hub docker com gradle tags page 1 name jdk для фазы запуска это bellsoft liberica openjre debian meta toolchain version допустимые значения можно увидеть на странице докер хаба https hub docker com r bellsoft liberica openjre debian tags eval rst admonition важно class warning значение meta toolchain version должно быть допустимым как для фазы сборки так и для фазы запуска лучше всего подходит простой номер lts версии jdk секция build в секции build могут быть указаны следующие параметры image args artifacts параметр image позволяет использовать другой образ для сборки а не тот который предлагается amvera образ должен удовлетворять следующим требованиям исходный код для сборки ожидается в папке app или образу без разницы где будет находиться исходный код в образе присутствует команда gradle которую можно вызвать по имени без указания абсолютного пути с параметром build параметр args позволяет указать дополнительные параметры команде gradle build build args например чтобы задать свойство server port yaml build args dserver port 80 в этом случае для сборки будет выполнена команда gradle build dserver port 80 параметр artifacts позволяет указать какие файлы должны попасть в итоговое приложение по умолчанию будут скопированы все файлы с расширением jar из папки build libs в корень папки приложения параметр artifacts в отличие от других параметров это не строка а словарь ключ в нем это маска файлов источника копирования а значение папка в которую будут скопированы файлы так значение artifacts по умолчанию yaml build artifacts build libs jar мы используем следующие правила копирования в качестве источника указываются только относительные пути без в начале если под маску попал файл файл будет скопирован в папку назначения без исходного пути если под маску попала папка она будет скопирована целиком в папку назначения вместе со всем содержимым секция run в сети run могут быть использованы следующие параметры jarname image persistencemount containerport параметр jarname является обязательным он указывает путь до файла с расширением jar который нужно запустить командой java jar run jarname пример yaml run jarname bin bag end jar параметр image позволяет использовать другой образ для сборки а не тот который предлагается amvera образ должен удовлетворять следующим требованиям результат сборки ожидается в папке app или образу без разницы где будет находиться результат сборки в образе присутствует команда java которую можно вызвать по имени без указания абсолютного пути с параметрами jar имя образа параметр persistencemount позволяет указать в какую директорию будет примонтирована папка с постоянным хранилищем storage md data по умолчанию имеет значение data параметр containerport позволяет указать какой порт слушает приложение по умолчанию имеет значение 80 рецепты минимальный файл amvera yml yaml meta environment jvm toolchain name gradle version 11 run jarname bag end jar spring boot yaml meta environment jvm toolchain name gradle version 11 run jarname bag end 1 0 0 jar containerport 8080",
    "metadata": {
        "file_name": "jvm-gradle.md",
        "section_count": 7,
        "section_1": "JVM Gradle",
        "section_2": "Секция meta",
        "section_3": "Секция build",
        "section_4": "Секция run",
        "section_5": "Рецепты",
        "section_6": "Минимальный файл amvera.yml",
        "section_7": "Spring Boot"
    }
}