{
    "text": "сетевое взаимодействие для каждого приложения создается сервис доступа с помощью которого к данному приложению можно подключиться из других приложений амвера и сети интернет сервис доступа транслирует указанные через запятую порты приложения в разделе run containerport файла конфигурации config file md в порты доступа указываемые так же через запятую в переменной serviceport по умолчанию для приложений значения serviceport и containerport равны 80 сервис обеспечивает балансировку запросов в случае если запущено несколько реплик одного приложения eval rst admonition подсказка class hint чтобы не прописывать явно номер порта можно использовать переменную окружения port по умолчанию ее значение равно 80 network proc img network proc png доступ из других приложений для доступа к приложению из других приложений развернутый в амвера достаточно обратиться к приложению по внутреннему доменному имени amvera транслитерированное имя проекта run имя пользователя для управления портами необходимо использовать параметры run containerport и run serviceport файла конфигурации config file md по умолчанию для приложений их значения равны 80 так если ваше приложения слушает порт 8090 и требуется подключаться к нему по порту 90 секция run будет следующая yaml run some other parameters containerport 8090 serviceport 90 eval rst admonition внимание class attention взаимодействие по внутренней сети происходит без шифрования со стороны amvera доступ из сети интернет для внешнего доступа к приложениям используется два типа контроллера http https на базе nginx tcp с открытыми портами 5432 27017 и 6379 для их активации требуется перейти в раздел настройки http https на базе nginx при добавлении доменного имени создается входной контроллер который слушает указанный домен и 80 порт и пересылает запросы в сервис доступа который в свою очередь доставляет их в одну из запущенных реплик приложения при выборе типа подключения https к домену привязывается сертификат обеспечивающий доступ по протоколу https eval rst admonition важно class warning создание входного контроллера и выдача ssl сертификата может занимать какое то время к одному входному контроллеру данного типа на разные пути можно посадить разные порты приложения если требуется чтобы domain amvera io web указывал на 80 порт а domain amvera io backend на 8080 настройки будут такими web ports img web ports png бесплатное доменное имя амвера для каждого приложения есть возможность привязать бесплатное доменное имя третьего уровня которое обеспечит защищенный доступ к приложению из глобальной сети интернет для этого в разделе настройки в секции доменные имена необходимо нажать на кнопку добавить доменное имя выбрать тип подключения и тип домена бесплатный домен амвера приложение получит url в формате транслитерированное имя проекта имя пользователя amvera io так для проекта тест пользователя user обратиться к приложению можно по адресу https test user amvera io default domain img default domain png свое доменное имя для привязки своего доменного имени купленного у регистратора например reg ru https reg ru требуется выполнить следующие действия 1 зайти в лк регистратора найти «dns серверы и управление зоной» или подобное название а именно там где прописываются a запись txt и т д в личном кабинете регистратора найти a запись и прописать туда ip указанный в разделе «настройки» «создать доменное имя» требуемого приложения в amvera cloud найти txt запись и прописать туда txt указанный в разделе «настройки» «создать доменное имя» требуемого приложения в amvera cloud 2 подождать пока запись распространится по dns серверам может занимать до 24 часов 3 в разделе «настройки» «создать доменное имя» указать доменное имя и нажать подтвердить и привязать в случае если все сделано верно и информация о домене дошла до dns сервера google 8 8 8 8 домен успешно привяжется 4 подождать пока сконфигурируется входной контроллер и сгенерируется бесплатный let s encrypt https letsencrypt org ssl сертификат tcp трафик при выборе типа подключения postgres mongo или redis создается контроллер который слушает соответствующие порты и перенаправляет tcp трафик на сервис доступа основываясь на sni postgres 5432 подходит только для managed postgres mongo 27017 redis 6379 если нужно чтобы приложение получало tcp трафик можно выбрать например тип подключения mongo и указать run serviceport равным 27017 доменное имя для tcp трафика отличается от http s и имеет вид транслитерированное имя проекта имя пользователя db region amvera tech пример настройки записей в лк reg ru https reg ru reg ru img reg ru png нужно нажать «добавить запись» внизу страницы и ввести значения a и txt профилактика ошибок в случае если при нажатии кнопки подтвердить и привязать вылезает ошибка следует проверить правильность заполнения записей и их наличие на dns серверах для проверки записей можно воспользоваться специальным сервисом https mxtoolbox com txtlookup aspx введя в поле доменное имя и нажав txt lookup в списке должна появится строчка с записью требуемой к заполнению в разделе «настройки» «создать доменное имя» сменив txt lookup на dns lookup должен вывестись ipv4 адрес сервера amvera указанный в разделе «настройки» «создать доменное имя»",
    "metadata": {
        "file_name": "network.md",
        "section_count": 9,
        "section_1": "Сетевое взаимодействие",
        "section_2": "Доступ из других приложений",
        "section_3": "Доступ из сети Интернет",
        "section_4": "HTTP|HTTPS на базе nginx",
        "section_5": "Бесплатное доменное имя Амвера",
        "section_6": "Свое доменное имя",
        "section_7": "TCP трафик",
        "section_8": "Пример настройки записей в ЛК [reg.ru](https://reg.ru)",
        "section_9": "Профилактика ошибок"
    }
}