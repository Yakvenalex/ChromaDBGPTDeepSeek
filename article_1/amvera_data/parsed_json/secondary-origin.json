{
    "text": "подключение к существующему репозиторию если у вас уже есть приложение которое вы хотите развернуть в amvera но оно уже использует другой репозиторий git github bitbucket или что то другое можно привязать дополнительный remote к вашему репозиторию eval rst admonition подсказка class hint для ознакомления с принципом работы с git рекомендуем эту статью https habr com ru articles 541258 которая упроcтит работу с нашим сервисом адрес удаленного репозитория находится на странице репозиторий приложения python config img git main png подключение репозитория откройте командную строку и перейдите в корневую папку проекта вашего приложения выполните команду shell git remote add amvera https git amvera ru имя пользователя транслитерированное имя проекта заполнение репозитория чтобы код можно было собрать и запустить необходимо наличие файла конфигурации amvera yaml configuration config file md и или dockerfile configuration docker md советуем так же ознакомится с процессом сборки build md и развертывания run md приложения развертывание проекта для инициализации процесса сборки и развертывания приложения достаточно отправить изменения в репозиторий амвера shell git push amvera master на запрос пользователя и пароля укажите имя пользователя и пароль вашей учетной записи amvera eval rst admonition подсказка class hint запущенные инстансы вашего проекта при ошибке сборки не останавливаются и продолжат работать пример 1 вызываем терминал в ide где открыто приложение или открываем папку проекта в терминале 2 инициализируем локальный гит репозиторий командой если он не инициализирован shell git init 3 добавим удаленный репозиторий нашего проекта url вашего репозитория будет отличаться во избежание синтаксических ошибок скопируйте ссылку на втором шаге создания проекта shell git remote add amvera https git amvera ru ваш ник имя проекта eval rst admonition важно class warning если вы задавали конфигурацию в интерфейсе не забудьте сделать git pull git pull amvera master для синхронизации репозиториев если вы не хотите синхронизировать репозитории то создайте yaml по ссылке https manifest amvera ru добавьте его в корень репозитория перед певым push при этом не добавляйте задавайте конфигурацию в интерфейсе задание конфигурации и добавление файлов в интерфейсе создает коммит после которого нужно синхронизировать репозитории при работе через git 4 добавим файлы и сделаем первый коммит shell git add git commit m initial commit 5 запушим наш код в репозиторий проекта shell git push amvera master 6 когда вы хотите сделать обновление проекта вы обновили код конфигурацию зависимости выполните команды shell git add git commit m описание сделанных изменений git push amvera master возможные ошибки если основная ветка называется не master а например main при выполнении команды git push amvera master появится ошибка для избежания ошибки достаточно указать из какой ветки необходимо запушить изменения shell git push amvera имя основной ветки master так например если основная ветка называется main команда будет выглядеть следующим образом shell git push amvera main master чтобы узнать какое название имеет основная ветка в предположении что вы на ней находитесь shell git branch show current eval rst admonition примечание class hint другие частые ошибки по работе с git собраны по doc ссылке freq errors если вы столкнулись с ошибкой или вам что то непонятно ознакомьтесь с разделом частые ошибки git freq errors md при работе с git",
    "metadata": {
        "file_name": "secondary-origin.md",
        "section_count": 7,
        "section_1": "Подключение к существующему репозиторию",
        "section_2": "Подключение репозитория",
        "section_3": "Заполнение репозитория",
        "section_4": "Развертывание проекта",
        "section_5": "Пример",
        "section_6": "Возможные ошибки",
        "section_7": "Если вы столкнулись с ошибкой или вам что-то непонятно"
    }
}