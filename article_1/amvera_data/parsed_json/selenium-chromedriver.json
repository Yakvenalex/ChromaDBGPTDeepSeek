{
    "text": "selenium и chromedriver облако амвера использует под капотом контейнеры чтобы было возможно использовать selenium в контейнере надо поставить необходимые библиотеки и указать порт дисплея в этом контейнере использование готового образа в этом образе https github com joyzoursky docker python chromedriver уже имеется нужный нам chromedriver и chrome шаги установки 1 создаем dockerfile в директории проекта 2 в dockerfile указываем образ c dockerfile from joyzoursky python chromedriver 3 9 3 назначаем workdir и указываем файлы приложения которые будут включены в итоговый образ все файлы в папке проекта dockerfile workdir app copy app 4 добавляем команду на установку зависимостей укажем их чуть позже dockerfile run pip install r requirements txt 5 задаём команду для запуска приложения dockerfile cmd python main py получившийся dockerfile dockerfile from joyzoursky python chromedriver 3 9 workdir app copy app run pip install r requirements txt cmd python main py eval rst admonition примечание class info вместо версии 3 9 можно указать другую версию python которая вам нужна и поддерживается автором образа создание своего образа с chromedriver в случае если требуемая версия python не поддерживается можно создать свой образ с нужной версией установив в него необходимые драйвера в приведенном примере за базовый образ взят образ python 3 8 https hub docker com python который можно заменить на подходящий dockerfile задаем базовый образ вместо 3 8 можно указать другую версию python from python 3 8 устанавливаем google chrome run wget q o https dl ssl google com linux linux signing key pub apt key add run sh c echo deb arch amd64 http dl google com linux chrome deb stable main etc apt sources list d google chrome list run apt get y update run apt get install y google chrome stable выставляем нужный порт дисплея env display 99 пример пример будет выводить title страницы www python org добавим в корень проекта следующеие файлы requirements txt text selenium 4 17 2 amvera yml yaml meta environment docker toolchain name docker version latest build dockerfile dockerfile skip false run persistencemount data containerport 80 dockerfile dockerfile from joyzoursky python chromedriver 3 9 workdir app copy app run pip install r requirements txt cmd python main py main py python from selenium import webdriver from selenium webdriver common keys import keys from selenium webdriver chrome options import options chrome options options chrome options add argument headless chrome options add argument no sandbox chrome options add argument disable dev shm usage driver webdriver chrome options chrome options driver get https www python org print driver title driver close в случае правильной работы программы в консоль выведется текст welcome to python org видеопример депдлоя python приложения с selenium eval rst youtube l afc5r3mgw align center width 100",
    "metadata": {
        "file_name": "selenium-chromedriver.md",
        "section_count": 8,
        "section_1": "Selenium и Chromedriver",
        "section_2": "Использование готового образа",
        "section_3": "Создание своего образа с ChromeDriver",
        "section_4": "задаем базовый образ (вместо 3.8 можно указать другую версию Python)",
        "section_5": "устанавливаем google-chrome",
        "section_6": "выставляем нужный порт дисплея",
        "section_7": "Пример",
        "section_8": "Видеопример депдлоя Python-приложения с Selenium"
    }
}