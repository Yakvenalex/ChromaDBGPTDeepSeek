{
    "text": "web приложение на c microsoft net с подключением к sqlite чтобы развернуть приложение в amvera нужно выполнить следующие простые шаги 1 открываем страницу https cloud amvera ru projects 2 нажимаем кнопку создать и выбираем тип сервиса приложение 3 выгружаем все файлы можно через git а можно через интерфейс не забудьте добавить конфигурационный файл amvera yml и или dockerfile 4 после этого начнется сборка https docs amvera ru applications build html и развертывание https docs amvera ru applications run html приложения дождитесь появления статуса «успешно развернуто» рассмотрим процесс подробнее напишем простое веб приложение которое при открытии сайта выводит всю информацию из базы данных будем использовать веб фреймворк asp net и базу данных sqlite создание проекта для начала создадим новый проект веб приложение с именем webservice bash dotnet new web n webservice создалась директория webservice перейдем в нее bash cd webservice так как мы будем использовать sqlite то необходимо его добавить в проект bash dotnet add package system data sqlite база данных sqlite в файле program cs код доступен в конце документации реализовано взаимодействие с базой данных для использования sqlite в amvera отдельное приложение контейнер не требуется достаточно в коде указать путь для хранения файлов этой бд в постоянное хранилище подробнее можно прочитать здесь https docs amvera ru databases sqlite html важно обратите внимание на указанный путь к базе данных сохранять изменяемые файлы базы данных и т д нужно именно в постоянное хранилище data это позволит избежать их потери при пересборке папка data в коде и постоянное хранилище data разные директории конфигурация amvera yml написать yaml файл можно как самостоятельно так и воспользоваться нашим генератором yaml перейдя по ссылке https manifest amvera ru либо заполнить в разделе «конфигурация» личного кабинета пример файла amvera yml yaml meta environment csharp toolchain name dotnet version 8 0 build image mcr microsoft com dotnet sdk 8 0 run image mcr microsoft com dotnet sdk 8 0 buildfilename bin webservice persistencemount data containerport 8080 важно поле buildfilename должно быть в формате bin имя файла либо bin publish имя файла если вы делаете через публикацию важно обратите внимание на containerport при создании приложения в program cs порт явно не указывается поэтому используется значение по умолчанию 8080 если в файле amvera yml указан неправильный порт то возникнет ошибка service unavailable 503 amvera по умолчанию слушает порт 80 рассмотрим альтернативный способ задания конфигурации через dockerfile dockerfile замечание если вы используете dockerfile то конфигурационный файл amvera yml в большинстве случаев можно не добавлять шаги 1 создаем dockerfile в директории с проектом 2 в dockerfile указываем базовый образ для этапа сборки dockerfile from mcr microsoft com dotnet sdk 8 0 as build вместо 8 0 можете указать любую другую версию которая вам нужна 3 устанавливаем рабочий каталог внутри контейнера dockerfile workdir app 4 копируем файл webservice csproj в контейнер dockerfile copy webservice csproj 5 восстанавливаем зависимости dockerfile run dotnet restore 6 копируем все файлы проекта в контейнер dockerfile copy 7 публикуем приложение для релиза dockerfile run dotnet publish c release o webservice 8 указываем базовый образ для этапа запуска dockerfile from mcr microsoft com dotnet aspnet 8 0 as runtime 9 устанавливаем рабочий каталог внутри контейнера dockerfile workdir app 10 копируем опубликованный результат из этапа сборки dockerfile copy from build app webservice 11 устанавливаем точку входа для контейнера dockerfile entrypoint dotnet webservice dll получившийся dockerfile dockerfile from mcr microsoft com dotnet sdk 8 0 as build workdir app copy webservice csproj run dotnet restore copy run dotnet publish c release o webservice from mcr microsoft com dotnet aspnet 8 0 as runtime workdir app copy from build app webservice entrypoint dotnet webservice dll пример файла amvera yml при использовании вместе с dockerfile yaml meta environment docker toolchain name docker version latest build dockerfile dockerfile skip false run persistencemount data containerport 8080 создание проекта в amvera последний шаг развернуть приложение в файле program cs содержится основной код и выполняется подключение к базе данных program cs c using microsoft aspnetcore builder using microsoft aspnetcore http using microsoft extensions dependencyinjection using system using system data sqlite var builder webapplication createbuilder args var app builder build указываем путь к базе данных var connectionstring data source data people db using var connection new sqliteconnection connectionstring connection open var createtablecommand connection createcommand createtablecommand commandtext create table if not exists people id integer primary key name text age integer occupation text createtablecommand executenonquery var insertdatacommand connection createcommand insertdatacommand commandtext insert or ignore into people name age occupation values john doe 30 engineer jane smith 25 teacher michael johnson 35 doctor insertdatacommand executenonquery app mapget async using var selectcommand connection createcommand selectcommand commandtext select from people using var reader await selectcommand executereaderasync string result people database n while reader read result id reader getint32 0 name reader getstring 1 age reader getint32 2 occupation reader getstring 3 n return result app run при необходимости можете изменить путь к базе данных если не хотите использовать стандартный порт 8080 то можно указать другой но тогда важно учесть это изменение в конфигурационном файле проверка работоспособности 1 переходим в настройки проекта и активируем доменное имя 2 теперь можно перейти по нему и откроется наш сайт с записями из базы данных если что то не работает рекомендуем ознакомиться с логами сборки и приложения видеопример eval rst youtube ykk7fxpsmq align center width 100 eval rst admonition важно class warning сохраняйте файлы бд и иные изменяемые данные в постоянное хранилище чтобы избежать их потери при обновлении проекта когда производится откат папки код до состояния обновления репозитория папка data в корне проекта и директория data это разные директории проверить что сохранение идет в data можно зайдя в папку data на странице репозиторий eval rst admonition важно class warning чтобы избежать ошибки 502 измените в вашем коде host 127 0 0 1 или подобный localhost на 0 0 0 0 и пропишите в конфигурации порт который слушает ваше приложение пример 8080 поздравляем вы успешно создали свое первое приложение в amvera если у вас не получается развернуть проект напишите наблюдаемую вами симптоматику на support amvera ru с указанием вашего имени пользователя и названия проекта мы постараемся вам помочь",
    "metadata": {
        "file_name": "NET-SQLite.md",
        "section_count": 12,
        "section_1": "Web-приложение на C# Microsoft (.NET) с подключением к SQLite",
        "section_2": "Напишем простое веб-приложение, которое при открытии сайта выводит всю информацию из базы данных. Будем использовать веб-фреймворк ASP.NET и базу данных SQLite.",
        "section_3": "Создание проекта",
        "section_4": "База данных (SQLite)",
        "section_5": "Конфигурация ",
        "section_6": "amvera.yml",
        "section_7": "Dockerfile",
        "section_8": "Шаги:",
        "section_9": "Создание проекта в Amvera",
        "section_10": "Проверка работоспособности",
        "section_11": "Видеопример",
        "section_12": "Если у вас не получается развернуть проект "
    }
}